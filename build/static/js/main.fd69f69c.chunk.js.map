{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","e","expenseFilter","year","target","onChangeYearFilter","ExpenseDate","month","date","toLocaleString","day","getFullYear","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesList","items","length","map","expenses","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expense","getMonth","Expenses","setYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","App","initialExpenses","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fd69f69c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const expenseFilterHandler = (e) => {\r\n    const expenseFilter = {\r\n      year: e.target.value,\r\n    };\r\n    props.onChangeYearFilter(expenseFilter);\r\n    // props.onChangeYearFilter(e.target.value)\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={expenseFilterHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nexport default function ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Card.css\";\r\n\r\nexport default function Card(props) {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n","import { useState } from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nexport default function ExpenseItem(props) {\r\n  // title: props.title\r\n  // setTitle: function untuk merubah title\r\n  const [title, setTitle] = useState(props.title);\r\n\r\n  const clickHandler = () => {\r\n    setTitle(\"Updated!\");\r\n    console.log(title);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n        <button onClick={clickHandler}>Change Title</button>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n","import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nexport default function ExpensesList(props) {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expenses) => (\r\n        <ExpenseItem\r\n          key={expenses.id}\r\n          title={expenses.title}\r\n          amount={expenses.amount}\r\n          date={expenses.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import \"./ChartBar.css\";\r\n\r\nexport default function ChartBar(props) {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nexport default function Chart(props) {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nexport default function ExpensesChart(props) {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Okt\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Des\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n}\r\n","import ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Expenses(props) {\r\n  const expenses = props.items;\r\n\r\n  const [year, setYear] = useState(\"2020\");\r\n  const changeYearFilterHandler = (expenseFilter) => {\r\n    setYear(expenseFilter.year);\r\n  };\r\n\r\n  const filteredExpenses = expenses.filter((expenses) => {\r\n    return expenses.date.getFullYear().toString() === year;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={year}\r\n        onChangeYearFilter={changeYearFilterHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses} />\r\n      <ExpensesList items={filteredExpenses} />\r\n      {/* <ExpenseItem\r\n        title={expenses[0].title}\r\n        amount={expenses[0].amount}\r\n        date={expenses[0].date}\r\n      />*/}\r\n    </Card>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nexport default function ExpenseForm(props) {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredAmount: event.target.value };\r\n    // });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredDate: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={titleChangeHandler}\r\n            value={enteredTitle}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            value={enteredAmount}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2023-01-01\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport React from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nexport default function NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Expenses from \"./components/Expenses/Expenses\";\r\nimport NewExpense from \"./components/NewExpense/NewExpense\";\r\n\r\nfunction App() {\r\n  const initialExpenses = [\r\n    {\r\n      id: \"e1\",\r\n      title: \"Toilet Paper\",\r\n      amount: 94.12,\r\n      date: new Date(2020, 7, 14),\r\n    },\r\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n    {\r\n      id: \"e3\",\r\n      title: \"Car Insurance\",\r\n      amount: 294.67,\r\n      date: new Date(2021, 2, 28),\r\n    },\r\n    {\r\n      id: \"e4\",\r\n      title: \"New Desk (Wooden)\",\r\n      amount: 450,\r\n      date: new Date(2021, 5, 12),\r\n    },\r\n  ];\r\n  const [expenses, setExpenses] = useState(initialExpenses);\r\n\r\n  const addExpenseHandler = (expense) => {\r\n    setExpenses((prevExpenses) => {\r\n      return [expense, ...prevExpenses];\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NewExpense onAddExpense={addExpenseHandler} />\r\n      <Expenses items={expenses} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}